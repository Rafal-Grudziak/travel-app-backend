{
    "openapi": "3.0.0",
    "info": {
        "title": "TripLog API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "operationId": "f779238bce5c5b984c773808f46fd14c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "android"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "xxxxxxxxxxxxxx"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required. (and 2 more errors)"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "operationId": "a09608b2fbed6bd1841153fae1c6b7f2",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "operationId": "f0e180cf2ce34bf385b5cf9d3169900d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "example": "android"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error: Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required. (and 2 more errors)"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/enums/travel-preferences": {
            "get": {
                "tags": [
                    "Enums"
                ],
                "summary": "Get Travel Preferences",
                "operationId": "1774aa26626010ab2beab2a447b97dd1",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Mountains"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/enums/travel-categories": {
            "get": {
                "tags": [
                    "Enums"
                ],
                "summary": "Get Travel Categories",
                "operationId": "7dc84b24c348ca6631682c88f9bd3f69",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Mountains"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/friends/list": {
            "get": {
                "tags": [
                    "Friends"
                ],
                "summary": "Get a list of users friends",
                "description": "Get a list of users friends.",
                "operationId": "c2b8e10b5829e4369bbd387c74036987",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved friends list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "avatar": {
                                                                "type": "string",
                                                                "example": "https://example.com/avatar.jpg"
                                                            },
                                                            "bio": {
                                                                "type": "string",
                                                                "example": "Traveler and photographer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/friends/requests": {
            "get": {
                "tags": [
                    "Friends"
                ],
                "summary": "Get pending friend requests",
                "description": "Get a list of pending friend requests.",
                "operationId": "bea799e22290fb8dd95b1a9d22a1c87c",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved pending friend requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "avatar": {
                                                                "type": "string",
                                                                "example": "https://example.com/avatar.jpg"
                                                            },
                                                            "bio": {
                                                                "type": "string",
                                                                "example": "Traveler and photographer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "created_at_diff": {
                                                        "type": "string",
                                                        "example": "2 hours ago"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/friends/send-request": {
            "post": {
                "tags": [
                    "Friends"
                ],
                "summary": "Send friend request",
                "description": "Send a friend request to a user.",
                "operationId": "76245be38325ced064b1cd0069642dbc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the user to send a friend request to",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend request sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friend request sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friend request already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/friends/accept-request/{friend_request}": {
            "patch": {
                "tags": [
                    "Friends"
                ],
                "summary": "Accept friend request",
                "description": "Accept a pending friend request.",
                "operationId": "ff982e383a26bad70563d15faed4f859",
                "parameters": [
                    {
                        "name": "friend_request",
                        "in": "path",
                        "description": "ID of the friend request to be accepted.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend request accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friend request accepted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - friend request already accepted or not pending",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request or already accepted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/friends/reject-request/{friend_request}": {
            "delete": {
                "tags": [
                    "Friends"
                ],
                "summary": "Reject friend request",
                "description": "ID of the friend request to be rejected.",
                "operationId": "92627c68af5f6a0e69d9c145643678ac",
                "parameters": [
                    {
                        "name": "friend_request",
                        "in": "path",
                        "description": "ID of the user whose friend request is to be rejected",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend request rejected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friend request rejected."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - friend request already rejected or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request or already rejected."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/friends/delete/{friend_id}": {
            "delete": {
                "tags": [
                    "Friends"
                ],
                "summary": "Delete friend",
                "description": "ID of the friend to be deleted.",
                "operationId": "c0944a91cb517f14f7536993ca7445e8",
                "parameters": [
                    {
                        "name": "friend_id",
                        "in": "path",
                        "description": "ID of the friend to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friend deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Friend does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friend does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/profiles/{user}": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Get user's profile",
                "description": "Get user's profile information including email, name, avatar, bio, and social media links.",
                "operationId": "fe32c4df9df077f7990aec20c9eab495",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful profile retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "avatar": {
                                            "type": "string",
                                            "example": "https://example.com/avatar.jpg"
                                        },
                                        "facebook_link": {
                                            "type": "string",
                                            "example": "https://facebook.com/johndoe"
                                        },
                                        "instagram_link": {
                                            "type": "string",
                                            "example": "https://instagram.com/johndoe"
                                        },
                                        "x_link": {
                                            "type": "string",
                                            "example": "https://x.com/johndoe"
                                        },
                                        "bio": {
                                            "type": "string",
                                            "example": "Traveler and photographer"
                                        },
                                        "travel_preferences": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Deserts"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "trips_count": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "planned_trips_count": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/profiles/{user}/update": {
            "put": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Update user's profile",
                "description": "Allows updating the user's profile including email, name, avatar, bio, and social media links.",
                "operationId": "a315759a216aac12ec4ed4b3be95f837",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "avatar": {
                                        "description": "Avatar image file (optional)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "facebook_link": {
                                        "type": "string",
                                        "example": "https://facebook.com/johndoe"
                                    },
                                    "instagram_link": {
                                        "type": "string",
                                        "example": "https://instagram.com/johndoe"
                                    },
                                    "x_link": {
                                        "type": "string",
                                        "example": "https://x.com/johndoe"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "Traveler and photographer"
                                    },
                                    "travel_preferences": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "2",
                                            "3"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "facebook_link": {
                                            "type": "string",
                                            "example": "https://facebook.com/johndoe"
                                        },
                                        "instagram_link": {
                                            "type": "string",
                                            "example": "https://instagram.com/johndoe"
                                        },
                                        "x_link": {
                                            "type": "string",
                                            "example": "https://x.com/johndoe"
                                        },
                                        "bio": {
                                            "type": "string",
                                            "example": "Traveler and photographer"
                                        },
                                        "travel_preferences": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Deserts"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "trips_count": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "planned_trips_count": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name must not exceed 32 characters."
                                                    }
                                                },
                                                "avatar": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The avatar must be an image."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/profiles/search": {
            "get": {
                "tags": [
                    "Profiles"
                ],
                "summary": "Search profiles",
                "description": "Search for profiles.",
                "operationId": "ded7b5f946851be2315ac985c55b170d",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query to filter profiles.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Select page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful profiles retrieval with pagination",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "avatar": {
                                                        "type": "string",
                                                        "example": "https://example.com/avatar.jpg"
                                                    },
                                                    "bio": {
                                                        "type": "string",
                                                        "example": "Traveler and photographer"
                                                    },
                                                    "friend_status": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "received_request_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/travels/{travel}": {
            "get": {
                "tags": [
                    "Travels"
                ],
                "summary": "Show travel details",
                "description": "Show travel details.",
                "operationId": "39c452246ff21b051ff838b218813b66",
                "parameters": [
                    {
                        "name": "travel",
                        "in": "path",
                        "description": "Travel ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Travel returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the travel",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Name of the travel",
                                            "type": "string",
                                            "example": "Mountain Adventure"
                                        },
                                        "description": {
                                            "description": "Description of the travel",
                                            "type": "string",
                                            "example": "A trip to explore the mountains"
                                        },
                                        "from": {
                                            "description": "Start date of the travel",
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-12-01"
                                        },
                                        "to": {
                                            "description": "End date of the travel",
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-12-10"
                                        },
                                        "longitude": {
                                            "description": "Longitude of the location",
                                            "type": "number",
                                            "format": "float",
                                            "example": 23.634501
                                        },
                                        "latitude": {
                                            "description": "Latitude of the location",
                                            "type": "number",
                                            "format": "float",
                                            "example": -102.552784
                                        },
                                        "favourite": {
                                            "description": "Whether the travel is marked as favourite",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "created": {
                                            "description": "Record creation",
                                            "type": "string",
                                            "example": "One minute ago"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/travels": {
            "post": {
                "tags": [
                    "Travels"
                ],
                "summary": "Create Travel",
                "description": "Creates a new travel record.",
                "operationId": "9e3b1f79161c80eb0922acd543842cd8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "from",
                                    "to",
                                    "longitude",
                                    "latitude"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the travel",
                                        "type": "string",
                                        "example": "Mountain Adventure"
                                    },
                                    "description": {
                                        "description": "Description of the travel",
                                        "type": "string",
                                        "example": "A trip to explore the mountains"
                                    },
                                    "from": {
                                        "description": "Start date of the travel",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-01"
                                    },
                                    "to": {
                                        "description": "End date of the travel",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-10"
                                    },
                                    "longitude": {
                                        "description": "Longitude of the location",
                                        "type": "number",
                                        "format": "float",
                                        "example": 23.634501
                                    },
                                    "latitude": {
                                        "description": "Latitude of the location",
                                        "type": "number",
                                        "format": "float",
                                        "example": -102.552784
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Travel created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the travel",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Name of the travel",
                                            "type": "string",
                                            "example": "Mountain Adventure"
                                        },
                                        "description": {
                                            "description": "Description of the travel",
                                            "type": "string",
                                            "example": "A trip to explore the mountains"
                                        },
                                        "from": {
                                            "description": "Start date of the travel",
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-12-01"
                                        },
                                        "to": {
                                            "description": "End date of the travel",
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-12-10"
                                        },
                                        "longitude": {
                                            "description": "Longitude of the location",
                                            "type": "number",
                                            "format": "float",
                                            "example": 23.634501
                                        },
                                        "latitude": {
                                            "description": "Latitude of the location",
                                            "type": "number",
                                            "format": "float",
                                            "example": -102.552784
                                        },
                                        "favourite": {
                                            "description": "Whether the travel is marked as favourite",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "created": {
                                            "description": "Record creation",
                                            "type": "string",
                                            "example": "One minute ago"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ],
                                                "from": [
                                                    "The from field must be a valid date."
                                                ]
                                            },
                                            "additionalProperties": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/travels/{travel}/update": {
            "put": {
                "tags": [
                    "Travels"
                ],
                "summary": "Update Travel",
                "description": "Update a travel.",
                "operationId": "b946bf50f7cc7e6c542d0240e8bf6214",
                "parameters": [
                    {
                        "name": "travel",
                        "in": "path",
                        "description": "ID of the travel to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "from",
                                    "to",
                                    "longitude",
                                    "latitude"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the travel",
                                        "type": "string",
                                        "example": "Mountain Adventure"
                                    },
                                    "description": {
                                        "description": "Description of the travel",
                                        "type": "string",
                                        "example": "A trip to explore the mountains"
                                    },
                                    "from": {
                                        "description": "Start date of the travel",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-01"
                                    },
                                    "to": {
                                        "description": "End date of the travel",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-10"
                                    },
                                    "longitude": {
                                        "description": "Longitude of the location",
                                        "type": "number",
                                        "format": "float",
                                        "example": 23.634501
                                    },
                                    "latitude": {
                                        "description": "Latitude of the location",
                                        "type": "number",
                                        "format": "float",
                                        "example": -102.552784
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Travel updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the travel",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Name of the travel",
                                            "type": "string",
                                            "example": "Mountain Adventure"
                                        },
                                        "description": {
                                            "description": "Description of the travel",
                                            "type": "string",
                                            "example": "A trip to explore the mountains"
                                        },
                                        "from": {
                                            "description": "Start date of the travel",
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-12-01"
                                        },
                                        "to": {
                                            "description": "End date of the travel",
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-12-10"
                                        },
                                        "longitude": {
                                            "description": "Longitude of the location",
                                            "type": "number",
                                            "format": "float",
                                            "example": 23.634501
                                        },
                                        "latitude": {
                                            "description": "Latitude of the location",
                                            "type": "number",
                                            "format": "float",
                                            "example": -102.552784
                                        },
                                        "favourite": {
                                            "description": "Whether the travel is marked as favourite",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "created": {
                                            "description": "Record creation",
                                            "type": "string",
                                            "example": "One minute ago"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ],
                                                "from": [
                                                    "The from field must be a valid date."
                                                ]
                                            },
                                            "additionalProperties": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/travels/{travel}/delete": {
            "delete": {
                "tags": [
                    "Travels"
                ],
                "summary": "Delete travel",
                "operationId": "6ff7da994a6417d7d7f0ccc36e67bfa9",
                "parameters": [
                    {
                        "name": "travel",
                        "in": "path",
                        "description": "Travel ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Travel deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Travel deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Travel not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/travels/{travel}/toggle-favourite": {
            "patch": {
                "tags": [
                    "Travels"
                ],
                "summary": "Toggle favourite",
                "operationId": "5262a6e7d246f8229d3c88b16347b9c2",
                "parameters": [
                    {
                        "name": "travel",
                        "in": "path",
                        "description": "Travel ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Travel updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "favourite": {
                                            "description": "Whether the travel is marked as favourite",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Travel not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/me": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get current authenticated user",
                "description": "Returns the currently authenticated user’s profile data",
                "operationId": "5f933ffa91b60901d8d8e33a5b0b0a2c",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "avatar": {
                                            "type": "string",
                                            "example": "avatars/user-avatar.jpg",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/me/update-password": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update the authenticated user's password",
                "description": "Allows the authenticated user to update their password by providing the current password and a new one.",
                "operationId": "901cb77e6b205804b65cf58cb9951c01",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "current_password": {
                                        "description": "The current password of the user",
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "password": {
                                        "description": "The new password to set",
                                        "type": "string",
                                        "example": "newPassword123"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation of the new password",
                                        "type": "string",
                                        "example": "newPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The current password is incorrect",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The current password is incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "current_password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The current password field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Auth"
        },
        {
            "name": "Enums"
        },
        {
            "name": "Friends"
        },
        {
            "name": "Profiles"
        },
        {
            "name": "Travels"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ],
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer $token)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}